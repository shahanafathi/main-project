# Generated by Django 5.1 on 2024-11-20 09:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomeUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('phone_number', models.IntegerField(blank=True, null=True, unique=True)),
                ('usertype', models.CharField(max_length=200)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('place', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(blank=True, default='pending', max_length=100, null=True)),
                ('license', models.FileField(blank=True, null=True, upload_to='')),
                ('Image', models.FileField(blank=True, null=True, upload_to='')),
                ('certificate', models.FileField(blank=True, null=True, upload_to='')),
                ('contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_address', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Delivary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=500)),
                ('place', models.CharField(max_length=500)),
                ('age', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('phonenumber', models.CharField(max_length=100)),
                ('licence', models.FileField(upload_to='')),
                ('image', models.FileField(upload_to='')),
                ('status', models.CharField(choices=[('available', 'available'), ('not available', 'not available')], default='pending', max_length=50)),
                ('delivary_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('expiry_date', models.DateField()),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('brandname', models.CharField(blank=True, max_length=100, null=True)),
                ('genericname', models.CharField(blank=True, max_length=100, null=True)),
                ('strength', models.IntegerField(blank=True, null=True)),
                ('Image', models.FileField(blank=True, null=True, upload_to='')),
                ('Image1', models.FileField(blank=True, null=True, upload_to='')),
                ('Image2', models.FileField(blank=True, null=True, upload_to='')),
                ('category_name', models.CharField(blank=True, max_length=100, null=True)),
                ('per_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('description1', models.CharField(blank=True, max_length=1000, null=True)),
                ('description2', models.CharField(blank=True, max_length=1000, null=True)),
                ('Image3', models.FileField(blank=True, null=True, upload_to='')),
                ('pharmacy_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_date', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('medicine_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.medicine')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(blank=True, null=True)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('FAILED', 'Failed')], default='PENDING', max_length=100, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('payment_status', models.CharField(default='booked', max_length=100)),
                ('total_amount', models.IntegerField(blank=True, null=True)),
                ('delivery_address', models.CharField(max_length=255)),
                ('cart_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.cart')),
                ('medicine_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.medicine')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='order_delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'PENDING'), ('STARTED', 'started'), ('finished', 'finished')], default='pending', max_length=50)),
                ('delivery_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_as_delivery', to='app.delivary')),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_as_order_id', to='app.order')),
                ('pharmancy_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_as_pharmacy', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='order_review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.CharField(blank=True, max_length=100, null=True)),
                ('rating', models.PositiveIntegerField(default=5)),
                ('Image', models.FileField(blank=True, null=True, upload_to='')),
                ('review_date', models.DateTimeField(auto_now_add=True)),
                ('cart_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.cart')),
                ('medicine_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.medicine')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('Date', models.DateTimeField(auto_now_add=True)),
                ('prescription_file', models.FileField(blank=True, null=True, upload_to='')),
                ('pharmancy_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions_as_pharmacy', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions_as_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True, unique=True)),
                ('Image', models.FileField(blank=True, null=True, upload_to='')),
                ('Image1', models.FileField(blank=True, null=True, upload_to='')),
                ('Image2', models.FileField(blank=True, null=True, upload_to='')),
                ('Image3', models.FileField(blank=True, null=True, upload_to='')),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', max_length=50)),
                ('quantity', models.IntegerField(blank=True, null=True, unique=True)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('medicine_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.medicine')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
            ],
        ),
        migrations.CreateModel(
            name='company_order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('total_amount', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('PENDING', 'Pending'), ('ACCEPT', 'accept'), ('REJECT', 'reject')], default='PENDING', max_length=100, null=True)),
                ('pharmacy_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
            ],
        ),
        migrations.CreateModel(
            name='wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_date', models.DateTimeField(auto_now_add=True)),
                ('cart_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.cart')),
                ('medicine_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.medicine')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
